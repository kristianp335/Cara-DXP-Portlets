/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package cara.jobs.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Jobs service. Represents a row in the &quot;Jobs_Jobs&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link cara.jobs.model.impl.JobsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link cara.jobs.model.impl.JobsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Jobs
 * @see cara.jobs.model.impl.JobsImpl
 * @see cara.jobs.model.impl.JobsModelImpl
 * @generated
 */
@ProviderType
public interface JobsModel extends BaseModel<Jobs>, GroupedModel, ShardedModel,
	StagedAuditedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a jobs model instance should use the {@link Jobs} interface instead.
	 */

	/**
	 * Returns the primary key of this jobs.
	 *
	 * @return the primary key of this jobs
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this jobs.
	 *
	 * @param primaryKey the primary key of this jobs
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this jobs.
	 *
	 * @return the uuid of this jobs
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this jobs.
	 *
	 * @param uuid the uuid of this jobs
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the job ID of this jobs.
	 *
	 * @return the job ID of this jobs
	 */
	public long getJobId();

	/**
	 * Sets the job ID of this jobs.
	 *
	 * @param jobId the job ID of this jobs
	 */
	public void setJobId(long jobId);

	/**
	 * Returns the group ID of this jobs.
	 *
	 * @return the group ID of this jobs
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this jobs.
	 *
	 * @param groupId the group ID of this jobs
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this jobs.
	 *
	 * @return the company ID of this jobs
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this jobs.
	 *
	 * @param companyId the company ID of this jobs
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this jobs.
	 *
	 * @return the user ID of this jobs
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this jobs.
	 *
	 * @param userId the user ID of this jobs
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this jobs.
	 *
	 * @return the user uuid of this jobs
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this jobs.
	 *
	 * @param userUuid the user uuid of this jobs
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this jobs.
	 *
	 * @return the user name of this jobs
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this jobs.
	 *
	 * @param userName the user name of this jobs
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this jobs.
	 *
	 * @return the create date of this jobs
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this jobs.
	 *
	 * @param createDate the create date of this jobs
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this jobs.
	 *
	 * @return the modified date of this jobs
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this jobs.
	 *
	 * @param modifiedDate the modified date of this jobs
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the project ID of this jobs.
	 *
	 * @return the project ID of this jobs
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this jobs.
	 *
	 * @param projectId the project ID of this jobs
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the job type of this jobs.
	 *
	 * @return the job type of this jobs
	 */
	@AutoEscape
	public String getJobType();

	/**
	 * Sets the job type of this jobs.
	 *
	 * @param jobType the job type of this jobs
	 */
	public void setJobType(String jobType);

	/**
	 * Returns the variant of this jobs.
	 *
	 * @return the variant of this jobs
	 */
	@AutoEscape
	public String getVariant();

	/**
	 * Sets the variant of this jobs.
	 *
	 * @param variant the variant of this jobs
	 */
	public void setVariant(String variant);

	/**
	 * Returns the format of this jobs.
	 *
	 * @return the format of this jobs
	 */
	@AutoEscape
	public String getFormat();

	/**
	 * Sets the format of this jobs.
	 *
	 * @param format the format of this jobs
	 */
	public void setFormat(String format);

	/**
	 * Returns the visual design of this jobs.
	 *
	 * @return the visual design of this jobs
	 */
	public Boolean getVisualDesign();

	/**
	 * Sets the visual design of this jobs.
	 *
	 * @param visualDesign the visual design of this jobs
	 */
	public void setVisualDesign(Boolean visualDesign);

	/**
	 * Returns the visual design cu of this jobs.
	 *
	 * @return the visual design cu of this jobs
	 */
	public Boolean getVisualDesignCu();

	/**
	 * Sets the visual design cu of this jobs.
	 *
	 * @param visualDesignCu the visual design cu of this jobs
	 */
	public void setVisualDesignCu(Boolean visualDesignCu);

	/**
	 * Returns the noticable consumers of this jobs.
	 *
	 * @return the noticable consumers of this jobs
	 */
	public Boolean getNoticableConsumers();

	/**
	 * Sets the noticable consumers of this jobs.
	 *
	 * @param noticableConsumers the noticable consumers of this jobs
	 */
	public void setNoticableConsumers(Boolean noticableConsumers);

	/**
	 * Returns the change packaging of this jobs.
	 *
	 * @return the change packaging of this jobs
	 */
	public Boolean getChangePackaging();

	/**
	 * Sets the change packaging of this jobs.
	 *
	 * @param changePackaging the change packaging of this jobs
	 */
	public void setChangePackaging(Boolean changePackaging);

	/**
	 * Returns the change formulation of this jobs.
	 *
	 * @return the change formulation of this jobs
	 */
	public Boolean getChangeFormulation();

	/**
	 * Sets the change formulation of this jobs.
	 *
	 * @param changeFormulation the change formulation of this jobs
	 */
	public void setChangeFormulation(Boolean changeFormulation);

	/**
	 * Returns the visual design complete of this jobs.
	 *
	 * @return the visual design complete of this jobs
	 */
	public Date getVisualDesignComplete();

	/**
	 * Sets the visual design complete of this jobs.
	 *
	 * @param visualDesignComplete the visual design complete of this jobs
	 */
	public void setVisualDesignComplete(Date visualDesignComplete);

	/**
	 * Returns the artwork approved of this jobs.
	 *
	 * @return the artwork approved of this jobs
	 */
	public Date getArtworkApproved();

	/**
	 * Sets the artwork approved of this jobs.
	 *
	 * @param artworkApproved the artwork approved of this jobs
	 */
	public void setArtworkApproved(Date artworkApproved);

	/**
	 * Returns the separation files to printer of this jobs.
	 *
	 * @return the separation files to printer of this jobs
	 */
	public Date getSeparationFilesToPrinter();

	/**
	 * Sets the separation files to printer of this jobs.
	 *
	 * @param separationFilesToPrinter the separation files to printer of this jobs
	 */
	public void setSeparationFilesToPrinter(Date separationFilesToPrinter);

	/**
	 * Returns the market deployment of this jobs.
	 *
	 * @return the market deployment of this jobs
	 */
	public Date getMarketDeployment();

	/**
	 * Sets the market deployment of this jobs.
	 *
	 * @param marketDeployment the market deployment of this jobs
	 */
	public void setMarketDeployment(Date marketDeployment);

	/**
	 * Returns the ship to trade of this jobs.
	 *
	 * @return the ship to trade of this jobs
	 */
	public Date getShipToTrade();

	/**
	 * Sets the ship to trade of this jobs.
	 *
	 * @param shipToTrade the ship to trade of this jobs
	 */
	public void setShipToTrade(Date shipToTrade);

	/**
	 * Returns the design agency of this jobs.
	 *
	 * @return the design agency of this jobs
	 */
	public long getDesignAgency();

	/**
	 * Sets the design agency of this jobs.
	 *
	 * @param designAgency the design agency of this jobs
	 */
	public void setDesignAgency(long designAgency);

	/**
	 * Returns the pma user of this jobs.
	 *
	 * @return the pma user of this jobs
	 */
	public long getPmaUser();

	/**
	 * Sets the pma user of this jobs.
	 *
	 * @param pmaUser the pma user of this jobs
	 */
	public void setPmaUser(long pmaUser);

	/**
	 * Returns the local marketing of this jobs.
	 *
	 * @return the local marketing of this jobs
	 */
	public long getLocalMarketing();

	/**
	 * Sets the local marketing of this jobs.
	 *
	 * @param localMarketing the local marketing of this jobs
	 */
	public void setLocalMarketing(long localMarketing);

	/**
	 * Returns the rnd local deploy user of this jobs.
	 *
	 * @return the rnd local deploy user of this jobs
	 */
	public long getRndLocalDeployUser();

	/**
	 * Sets the rnd local deploy user of this jobs.
	 *
	 * @param rndLocalDeployUser the rnd local deploy user of this jobs
	 */
	public void setRndLocalDeployUser(long rndLocalDeployUser);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(cara.jobs.model.Jobs jobs);

	@Override
	public int hashCode();

	@Override
	public CacheModel<cara.jobs.model.Jobs> toCacheModel();

	@Override
	public cara.jobs.model.Jobs toEscapedModel();

	@Override
	public cara.jobs.model.Jobs toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}